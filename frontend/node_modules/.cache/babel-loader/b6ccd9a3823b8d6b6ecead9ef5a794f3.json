{"ast":null,"code":"// const api_base_url = \"https://api.mann-eller-kvinne.no\"\nconst api_base_url = \"https://osunorgeapi.lblend.moe\";\nexport const predict = async text => {\n  if (text.length > 5000) {\n    return {\n      prediction: {\n        norwegian: 'som skriver for lange tekster'\n      }\n    };\n  }\n\n  let data = {\n    text: text\n  };\n  console.log(data);\n  const rawResponse = await fetch(`${api_base_url}/mann-eller-kvinne`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  let response = await rawResponse.json();\n  return response;\n};","map":{"version":3,"sources":["C:/Users/LBlend/Desktop/mann-eller-kvinne/frontend/src/components/API.js"],"names":["api_base_url","predict","text","length","prediction","norwegian","data","console","log","rawResponse","fetch","method","headers","body","JSON","stringify","response","json"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAG,gCAArB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAOC,IAAP,IAAgB;AACrC,MAAIA,IAAI,CAACC,MAAL,GAAc,IAAlB,EAAwB;AACtB,WAAO;AAACC,MAAAA,UAAU,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ;AAAb,KAAP;AACD;;AACD,MAAIC,IAAI,GAAG;AAACJ,IAAAA,IAAI,EAAEA;AAAP,GAAX;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAMG,WAAW,GAAG,MAAMC,KAAK,CAAE,GAAEV,YAAa,oBAAjB,EAAsC;AACnEW,IAAAA,MAAM,EAAE,MAD2D;AAEnEC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF0D;AAKnEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AAL6D,GAAtC,CAA/B;AAOA,MAAIU,QAAQ,GAAG,MAAMP,WAAW,CAACQ,IAAZ,EAArB;AACA,SAAOD,QAAP;AACD,CAfM","sourcesContent":["// const api_base_url = \"https://api.mann-eller-kvinne.no\"\r\nconst api_base_url = \"https://osunorgeapi.lblend.moe\"\r\n\r\nexport const predict = async (text) => {\r\n  if (text.length > 5000) {\r\n    return {prediction: {norwegian: 'som skriver for lange tekster'}}\r\n  }\r\n  let data = {text: text}\r\n  console.log(data)\r\n  const rawResponse = await fetch(`${api_base_url}/mann-eller-kvinne`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data)\r\n  });\r\n  let response = await rawResponse.json();\r\n  return response;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}